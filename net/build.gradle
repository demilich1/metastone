buildscript {
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:0.5.4.RELEASE"
        classpath "jp.classmethod.aws:gradle-aws-plugin:0.21"
        classpath "com.github.jengelman.gradle.plugins:shadow:1.2.4"
    }
}

task copyNativeDeps(type: Copy) {
    from(configurations.compile) {
        include "*.dylib"
        include "*.so"
        include "*.dll"
    }
    into 'build/libs'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'jp.classmethod.aws'
apply plugin: 'application'
apply plugin: "com.github.johnrengelman.shadow"

shadowJar {
    zip64 true
}

mainClassName = 'com.hiddenswitch.proto3.net.EmbeddedApplication'


aws {
    profileName = 'metastone_net'
    region = 'us-east-1'
}

configurations {
    quasar
}

repositories {
    mavenCentral()
    maven {
        url 'http://dynamodb-local.s3-website-us-west-2.amazonaws.com/release'
    }
}

dependencyManagement {
    imports {
        mavenBom 'com.amazonaws:aws-java-sdk-bom:1.11.52'
    }
}

dependencies {
    quasar files("lib/quasar-core-0.7.5-jdk8.jar")

    compile group: 'com.amazonaws', name: 'aws-java-sdk', version: '1.11.52'
    compile group: 'com.lambdaworks', name: 'scrypt', version: '1.4.0'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    compile group: 'commons-validator', name: 'commons-validator', version: '1.4.1'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.3.1'
    compile group: 'io.vertx', name: 'vertx-core', version: '3.3.3'
    compile group: 'io.vertx', name: 'vertx-sync', version: '3.3.3'
    compile group: 'io.vertx', name: 'vertx-service-discovery', version: '3.3.3'
    compile group: 'io.vertx', name: 'vertx-web', version: '3.3.3'
    compile group: 'org.elasticmq', name: 'elasticmq-rest-sqs_2.11', version: '0.10.0'
    compile group: 'com.almworks.sqlite4java', name: 'sqlite4java', version: '1.0.392'
    compile group: 'com.almworks.sqlite4java', name: 'sqlite4java-win32-x86', version: '1.0.392'
    compile group: 'com.almworks.sqlite4java', name: 'sqlite4java-win32-x64', version: '1.0.392'
    compile group: 'com.almworks.sqlite4java', name: 'libsqlite4java-osx', version: '1.0.392'
    compile group: 'com.almworks.sqlite4java', name: 'libsqlite4java-linux-i386', version: '1.0.392'
    compile group: 'com.almworks.sqlite4java', name: 'libsqlite4java-linux-amd64', version: '1.0.392'
    compile group: 'com.amazonaws', name: 'DynamoDBLocal', version: '1.11.0.1'

    compile project(':game')
    compile project(':cards')

    testCompile group: 'junit', name: 'junit', version: '4.+'
    testCompile group: 'org.unitils', name: 'unitils-core', version: '3.4.3'
    testCompile group: 'io.vertx', name: 'vertx-unit', version: '3.3.3'
}

tasks.withType(JavaExec) {
    jvmArgs "-javaagent:${configurations.quasar.iterator().next()}"
}

test {
    dependsOn copyNativeDeps

    doFirst {
        systemProperty "sqlite4java.library.path", 'build/libs'
    }

    jvmArgs "-javaagent:${configurations.quasar.iterator().next()}"
    useJUnit()
    testLogging {
        events "failed"
    }
}

run.dependsOn copyNativeDeps
run.doFirst {
    systemProperty "sqlite4java.library.path", 'build/libs'
}

//compileJava.dependsOn processResources
//compileJava {
//    doLast {
//        ant.taskdef(name:'instrumentation', classname:'co.paralleluniverse.fibers.instrument.InstrumentationTask', classpath: configurations.compile.asPath)
//        ant.instrumentation(verbose:'true', check:'true', debug:'true') {
//            fileset(dir: sourceSets.main.output.classesDir)
//        }
//    }
//}
//compileTestJava.dependsOn processTestResources
//compileTestJava {
//    doLast {
//        ant.taskdef(name:'instrumentation', classname:'co.paralleluniverse.fibers.instrument.InstrumentationTask', classpath: configurations.testCompile.asPath)
//        ant.instrumentation(verbose:'true', check:'true', debug:'true') {
//            fileset(dir: sourceSets.test.output.classesDir)
//        }
//    }
//}
